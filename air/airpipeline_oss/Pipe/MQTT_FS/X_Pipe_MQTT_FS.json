{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/mapping",
        "github.com/TIBCOSoftware/ModelOps/activity/dataselector",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/jsonserializer",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "github.com/TIBCOSoftware/F1_Function/functions/f1"
    ],
    "name": "X_Pipe_MQTT_FS",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.9.0",
    "triggers": [],
    "resources": [
        {
            "id": "flow:Pipe",
            "data": {
                "name": "Pipe",
                "description": "7|14",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "CheckServiceType",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "CheckServiceType",
                        "to": "LogPublish",
                        "type": "expression",
                        "label": "CheckServiceTypeto",
                        "value": "boolean.false()==$activity[CheckServiceType].Data.IsNotificationListener&&boolean.false()==$activity[CheckServiceType].Data.IsNotification"
                    },
                    {
                        "id": 3,
                        "from": "LogPublish",
                        "to": "DataSelector",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "DataSelector",
                        "to": "TransformData",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "TransformData",
                        "to": "SerializerData",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "SerializerData",
                        "to": "MQTTPub",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "MQTTPub",
                        "to": "Next_Flow_7",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "Next_Flow_7",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "CheckServiceType",
                        "to": "LogNotification",
                        "type": "expression",
                        "label": "CheckServiceTypetoLogMessage1",
                        "value": "boolean.true()==$activity[CheckServiceType].Data.IsNotificationListener&&boolean.true()==$activity[CheckServiceType].Data.IsNotification"
                    },
                    {
                        "id": 10,
                        "from": "LogNotification",
                        "to": "MQTTNotify",
                        "type": "expression",
                        "label": "LogNotificationtoMQTTPub1",
                        "value": "\"Message\"==$flow.enriched[0].value"
                    },
                    {
                        "id": 11,
                        "from": "MQTTNotify",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "LogNotification",
                        "to": "Return3",
                        "type": "exprOtherwise",
                        "label": "LogNotificationtoReturn"
                    },
                    {
                        "id": 13,
                        "from": "CheckServiceType",
                        "to": "LogPassThrough",
                        "type": "exprOtherwise",
                        "label": "CheckServiceTypetoLogMessage1"
                    },
                    {
                        "id": 14,
                        "from": "LogPassThrough",
                        "to": "Next_Flow_14",
                        "type": "default"
                    },
                    {
                        "id": 15,
                        "from": "Next_Flow_14",
                        "to": "Return4",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"########## Pipe_1(MQTT_OLD) ########## : gateway = \", $flow.gateway, \", reading = \", string.tostring($flow.reading), \", enriched = \", string.tostring($flow.enriched))"
                            }
                        }
                    },
                    {
                        "id": "CheckServiceType",
                        "name": "CheckServiceType",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "IsNotification": "=(0<array.count($flow.enriched)) && (\"Notification\"==$flow.enriched[0].name)",
                                        "IsNotificationListener": "=$property[\"App.IsListener\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"},\"SkipCondition\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"IsNotificationListener\":true,\"IsNotification\":true,\"SkipCondition\":false}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"IsNotificationListener\":true,\"IsNotification\":true}"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPublish",
                        "name": "LogPublish",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "*** Publishing ***"
                            }
                        }
                    },
                    {
                        "id": "DataSelector",
                        "name": "DataSelector",
                        "description": "This activity select datas from array",
                        "activity": {
                            "ref": "#dataselector",
                            "settings": {
                                "targets": "[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]",
                                "leftToken": "$",
                                "rightToken": "$",
                                "variablesDef": "[{\"Name\":\"Value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Variables": {
                                    "mapping": {
                                        "Value": "=$property[\"MQTTPub.TargetField\"]"
                                    }
                                },
                                "DataCollection": "=f1.airdata2collection(f1.modifyobject(f1.modifyobject(f1.json2object(\"{}\"), \"gateway\", $flow.gateway), \"reading\", $flow.reading), $flow.enriched)"
                            },
                            "schemas": {
                                "input": {
                                    "Variables": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"Value\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "ExtractedData": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"Value\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "targets": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"FieldMatch\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]"
                                    },
                                    "variablesDef": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"Value\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TransformData",
                        "name": "TransformData",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ResourceID": "=f1.ternary(\"f1..value\"==$property[\"MQTTPub.TargetField\"], $flow.reading.id, string.concat($flow.reading.id, \"_\", string.substring($property[\"MQTTPub.TargetField\"],string.lastIndex($property[\"MQTTPub.TargetField\"], \".\")+1,string.length($property[\"MQTTPub.TargetField\"])-string.lastIndex($property[\"MQTTPub.TargetField\"], \".\")-1)))",
                                        "ResourceName": "=f1.ternary(\"f1..value\"==$property[\"MQTTPub.TargetField\"], $flow.reading.resourceName, string.concat($flow.reading.resourceName, \"_\", string.substring($property[\"MQTTPub.TargetField\"],string.lastIndex($property[\"MQTTPub.TargetField\"], \".\")+1,string.length($property[\"MQTTPub.TargetField\"])-string.lastIndex($property[\"MQTTPub.TargetField\"], \".\")-1)))"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"ResourceID\":\"2\",\"ResourceName\":\"2\",\"SkipCondition\":false}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ResourceID\":\"2\",\"ResourceName\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SerializerData",
                        "name": "SerializerData",
                        "description": "JSON Serializer Activity",
                        "activity": {
                            "ref": "#jsonserializer",
                            "settings": {
                                "schemaFromfile": false,
                                "sample": "",
                                "dataSample": {
                                    "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceName\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"profileName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"object\",\"properties\":{}},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}},\"source\":{\"type\":\"number\"}}}",
                                    "value": "",
                                    "fe_metadata": "{\n\t\"device\":\"RESTDevice\",\n\t\"gateway\":\"RPI_Jakarta_HomeDevices\",\n\t\"id\":\"67607ae2-16d5-438b-ab79-7167789754c0\",\n\t\"readings\":[\n\t\t{\n\t\t\t\"deviceName\":\"RESTDevice\",\n\t\t\t\"id\":\"1a552353-5c70-4cd1-bd05-ec56e04a3dde\",\n\t\t\t\"origin\":1641577052740,\n\t\t\t\"profileName\":\"Generic-REST-Device\",\n\t\t\t\"resourceName\":\"int16_reading\",\n\t\t\t\"value\":\"80\",\n\t\t\t\"objectValue\":{},\n\t\t\t\"valueType\":\"Int16\",\n\t\t\t\"mediaType\":\"\"\n\t\t}\n\t],\n\t\"source\":1641577052740391700\n}"
                                }
                            },
                            "input": {
                                "Data": {
                                    "mapping": {
                                        "id": "=$activity[TransformData].Data.ResourceID",
                                        "source": "=$flow.reading.origin",
                                        "device": "=$flow.reading.deviceName",
                                        "gateway": "=$flow.gateway",
                                        "readings": [
                                            {
                                                "id": "=$activity[TransformData].Data.ResourceID",
                                                "origin": "=$flow.reading.origin",
                                                "value": "=f1.ternary($property[\"MQTTPub.EncodeReadingValue\"], string.stringToBase64($activity[DataSelector].ExtractedData.Value), $activity[DataSelector].ExtractedData.Value)",
                                                "valueType": "=$flow.reading.valueType",
                                                "mediaType": "=$flow.reading.mediaType",
                                                "deviceName": "=$flow.reading.deviceName",
                                                "profileName": "not mapped",
                                                "resourceName": "=$flow.reading.resourceName",
                                                "objectValue": "=$flow.reading.objectValue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceName\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"profileName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"object\",\"properties\":{}},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}},\"source\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"device\":\"RESTDevice\",\"gateway\":\"RPI_Jakarta_HomeDevices\",\"id\":\"67607ae2-16d5-438b-ab79-7167789754c0\",\"readings\":[{\"deviceName\":\"RESTDevice\",\"id\":\"1a552353-5c70-4cd1-bd05-ec56e04a3dde\",\"origin\":1641577052740,\"profileName\":\"Generic-REST-Device\",\"resourceName\":\"int16_reading\",\"value\":\"80\",\"objectValue\":{},\"valueType\":\"Int16\",\"mediaType\":\"\"}],\"source\":1641577052740391700}"
                                    }
                                },
                                "settings": {
                                    "dataSample": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceName\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"profileName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"object\",\"properties\":{}},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}},\"source\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n\t\"device\":\"RESTDevice\",\n\t\"gateway\":\"RPI_Jakarta_HomeDevices\",\n\t\"id\":\"67607ae2-16d5-438b-ab79-7167789754c0\",\n\t\"readings\":[\n\t\t{\n\t\t\t\"deviceName\":\"RESTDevice\",\n\t\t\t\"id\":\"1a552353-5c70-4cd1-bd05-ec56e04a3dde\",\n\t\t\t\"origin\":1641577052740,\n\t\t\t\"profileName\":\"Generic-REST-Device\",\n\t\t\t\"resourceName\":\"int16_reading\",\n\t\t\t\"value\":\"80\",\n\t\t\t\"objectValue\":{},\n\t\t\t\"valueType\":\"Int16\",\n\t\t\t\"mediaType\":\"\"\n\t\t}\n\t],\n\t\"source\":1641577052740391700\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "MQTTPub",
                        "name": "MQTTPub",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": {
                                    "id": "d6a870e0-7252-11eb-9375-e70618e4c84b",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "name": "name",
                                            "required": true,
                                            "type": "string",
                                            "value": "IoTMQTT"
                                        },
                                        {
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "name": "description",
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'",
                                                "appPropertySupport": true,
                                                "name": "Broker URL",
                                                "visible": true
                                            },
                                            "name": "broker",
                                            "required": true,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Broker_URL\"]"
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a username if this connection requires one",
                                                "appPropertySupport": true,
                                                "name": "Username",
                                                "visible": true
                                            },
                                            "name": "user",
                                            "required": false,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Username\"]"
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a password if this connection requires one",
                                                "appPropertySupport": true,
                                                "encryptable": true,
                                                "name": "Password",
                                                "type": "password",
                                                "visible": true
                                            },
                                            "name": "password",
                                            "required": false,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Password\"]"
                                        },
                                        {
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "display": {
                                                "description": "Choose the type of authentication to use",
                                                "name": "Encryption Mode"
                                            },
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "value": "None"
                                        },
                                        {
                                            "display": {
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "name": "Cacert",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "cacert",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "name": "Client Cert",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "clientcert",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "name": "Client Key",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "clientkey",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "category": "Mqtt",
                                        "description": "MQTT Connector",
                                        "largeIcon": "icons/mqtt.png",
                                        "smallIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1614026666641,
                                    "user": "flogo",
                                    "connectorName": "IoTMQTT",
                                    "connectorDescription": " "
                                },
                                "topic": "=$property[\"MQTTPub.Topic\"]",
                                "retain": "=$property[\"MQTTPub.Retain\"]",
                                "qos": "=$property[\"MQTTPub.Qos\"]",
                                "valueType": "String",
                                "stringValue": "=$activity[SerializerData].JSONString"
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"source\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{ \"id\": \"@f1..id@\", \"source\": 1, \"device\": \"@f1..device@\", \"gateway\": \"@f1..gateway@\", \"readings\": [{\"id\": \"@f1..id@\", \"origin\": 1, \"device\": \"@f1..device@\", \"name\": \"@f1..name@\", \"value\": \"@f1..value@\", \"valueType\": \"@f1..valueType@\", \"mediaType\": \"@f1..mediaType@\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Next_Flow_7",
                        "name": "Next_Flow_7",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:Dummy"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "LogNotification",
                        "name": "LogNotification",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "*** Notifying ***"
                            }
                        }
                    },
                    {
                        "id": "MQTTNotify",
                        "name": "MQTTNotify",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": {
                                    "id": "d6a870e0-7252-11eb-9375-e70618e4c84b",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "name": "name",
                                            "required": true,
                                            "type": "string",
                                            "value": "IoTMQTT"
                                        },
                                        {
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "name": "description",
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'",
                                                "appPropertySupport": true,
                                                "name": "Broker URL",
                                                "visible": true
                                            },
                                            "name": "broker",
                                            "required": true,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Broker_URL\"]"
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a username if this connection requires one",
                                                "appPropertySupport": true,
                                                "name": "Username",
                                                "visible": true
                                            },
                                            "name": "user",
                                            "required": false,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Username\"]"
                                        },
                                        {
                                            "display": {
                                                "Description": "Enter a password if this connection requires one",
                                                "appPropertySupport": true,
                                                "encryptable": true,
                                                "name": "Password",
                                                "type": "password",
                                                "visible": true
                                            },
                                            "name": "password",
                                            "required": false,
                                            "type": "string",
                                            "value": "=$property[\"Mqtt.IoTMQTT.Password\"]"
                                        },
                                        {
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "display": {
                                                "description": "Choose the type of authentication to use",
                                                "name": "Encryption Mode"
                                            },
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "value": "None"
                                        },
                                        {
                                            "display": {
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "name": "Cacert",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "cacert",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "name": "Client Cert",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "clientcert",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        },
                                        {
                                            "display": {
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "name": "Client Key",
                                                "readonly": false,
                                                "type": "fileselector",
                                                "valid": true,
                                                "visible": false
                                            },
                                            "name": "clientkey",
                                            "required": false,
                                            "type": "string",
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "category": "Mqtt",
                                        "description": "MQTT Connector",
                                        "largeIcon": "icons/mqtt.png",
                                        "smallIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1614026666641,
                                    "user": "flogo",
                                    "connectorName": "IoTMQTT",
                                    "connectorDescription": " "
                                },
                                "topic": "=$property[\"MQTTPub.Topic\"]",
                                "retain": "=$property[\"MQTTPub.Retain\"]",
                                "qos": "=$property[\"MQTTPub.Qos\"]",
                                "valueType": "JSON",
                                "stringValue": "",
                                "jsonValue": "=f1.json2object(f1.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"MQTTPub.NotificationData\"]))"
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                                        "fe_metadata": "{}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "Return3",
                        "name": "Return3",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "LogPassThrough",
                        "name": "LogPassThrough",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "*** Passing Through ***"
                            }
                        }
                    },
                    {
                        "id": "Next_Flow_14",
                        "name": "Next_Flow_14",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:Dummy"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return4",
                        "name": "Return4",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"deviceName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"object\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "enriched",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"deviceName\":{\"type\":\"string\"},\"resourceName\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"object\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                    }
                }
            }
        },
        {
            "id": "flow:Dummy",
            "data": {
                "name": "Dummy",
                "description": "",
                "links": [],
                "tasks": [],
                "metadata": {
                    "input": [
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "enriched",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Mqtt.IoTMQTT.Broker_URL",
            "type": "string",
            "value": "tcp://a0056dbbadb2f11e99e4c067e42b309c-335014729.us-west-2.elb.amazonaws.com:1883"
        },
        {
            "name": "Mqtt.IoTMQTT.Username",
            "type": "string",
            "value": "mqtt_admin"
        },
        {
            "name": "Mqtt.IoTMQTT.Password",
            "type": "string",
            "value": "SECRET:QHbqbifR6XRhA1dvLuSAYQ=="
        },
        {
            "name": "App.IsListener",
            "type": "boolean",
            "value": false
        },
        {
            "name": "App.ComponentName",
            "type": "string",
            "value": "NA"
        },
        {
            "name": "MQTTPub.Topic",
            "type": "string",
            "value": "NA"
        },
        {
            "name": "MQTTPub.Qos",
            "type": "float64",
            "value": 2
        },
        {
            "name": "MQTTPub.Retain",
            "type": "boolean",
            "value": false
        },
        {
            "name": "MQTTPub.NotificationData",
            "type": "string",
            "value": "{\\\"uuid\\\": \\\"@f1..id@\\\",\\\"created\\\": \\\"@f1..origin@\\\",\\\"gateway\\\": \\\"@f1..gateway@\\\",\\\"device\\\": \\\"@f1..device@\\\",\\\"resource\\\": \\\"@f1..name@\\\",\\\"value\\\": \\\"@f1..value@\\\",\\\"source\\\": \\\"@rule..source@\\\",\\\"description\\\": \\\"@rule..description@\\\",\\\"level\\\": \\\"@rule..level@\\\"}"
        },
        {
            "name": "MQTTPub.PublishData",
            "type": "string",
            "value": "{ \\\"id\\\": \\\"@..id@\\\", \\\"source\\\": \\\"@..source@\\\", \\\"device\\\": \\\"@..device@\\\", \\\"gateway\\\": \\\"@..gateway@\\\", \\\"readings\\\": [{\\\"id\\\": \\\"@..id@\\\", \\\"origin\\\": \\\"@..origin@\\\", \\\"device\\\": \\\"@..device@\\\", \\\"name\\\": \\\"@..name@\\\", \\\"value\\\": \\\"@..value@\\\", \\\"valueType\\\": \\\"@..valueType@\\\", \\\"mediaType\\\": \\\"@..mediaType@\\\"}]}"
        },
        {
            "name": "MQTTPub.TargetField",
            "type": "string",
            "value": "f1..value"
        },
        {
            "name": "MQTTPub.EscapeDoubleQuote",
            "type": "boolean",
            "value": true
        },
        {
            "name": "MQTTPub.EncodeReadingValue",
            "type": "boolean",
            "value": false
        }
    ],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL0dyYXBoQnVpbGRlcl9Ub29scyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9HcmFwaEJ1aWxkZXJfVG9vbHMifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktbXF0dC5naXQvTXF0dCIsInMzbG9jYXRpb24iOiJUaWJjby9NcXR0In0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvTW9kZWxPcHMiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vTW9kZWxPcHMifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9GMV9GdW5jdGlvbi9mdW5jdGlvbnMvZjEiLCJzM2xvY2F0aW9uIjoiZmxvZ28vZjEvZnVuY3Rpb25zL2YxIn1d",
    "fe_metadata": "UEsDBAoAAAAIACtzLVSrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAArcy1Uq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}